<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link id="theme" rel="stylesheet" type="text/css" href="style.css">
    <title>Document</title>
    <style>
        table, th, td {
            border: 1px solid black;
        }
        th, td {
            padding: 10px;
        }
        .overlay {
            height: 100%;
            width: 0;
            position: fixed;
            z-index: 1;
            top: 0px;
            left: 0;
            background-color: rgb(0,0,0);
            background-color: rgba(0,0,0, 0.9);
            overflow-x: hidden;
            transition: 0.5s;
        }
        
        .overlay-content {
            position: relative;
            top: 25%;
            width: 100%;
            text-align: center;
            margin-top: 30px;
        }
        
        .overlay a {
            padding: 15px;
            text-decoration: none;
            font-size: 36px;
            color: #818181;
            display: block;
            transition: 0.3s;
        }
        
        .overlay a:hover, .overlay a:focus {
            color: #f1f1f1;
        }
        
        .overlay .closebtn {
            position: absolute;
            top: 20px;
            right: 45px;
            font-size: 60px;
        }
        
        @media screen and (max-height: 450px) {
            .overlay a {font-size: 20px}
            .overlay .closebtn {
                font-size: 40px;
                top: 15px;
                right: 35px;
            }
        }

        .openOverlay {
            position: fixed;
            top: 20px;
            left: 20px;
            font-size: 30px;
            cursor: pointer;
            z-index: 2;
        }
    </style>
</head>
<body>
    <!-- <div id="google_translate_element"></div> -->
 <br>
    <script type="text/javascript">
        function googleTranslateElementInit() {
            new google.translate.TranslateElement(
                {pageLanguage: 'en'},
                'google_translate_element'
            );
        }
    </script>
 
    <script type="text/javascript" src="https://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>
    <script src="script.js"></script>
    <a href="manager"><img src="logo-clearbg.png" class="logo"></a>
    <div id="header">
        <div   class="navigation">
            <nav  >
                <ul  >
                    <li id = "header" class="dropdown">
                        <a id = "header" class="dropdown-btn" href="/reports">Reports</a>
                        <div id = "header" class="dropdown-content">
                            <a id = "header" href="sales">Sales Report</a>
                            <a id = "header" href="excess">Excess Report</a>
                            <a id = "header" href="restock">Restock Report</a>
                            <a id = "header" href="popularity">Popularity Report</a>
                            <a id = "header" href="wst">What Sales Together</a>
                        </div>
                    </li>
                    <li id = "header"><a id = "header" href="managermenu">Menu</a></li>
                    <li id = "header"><a id = "header" href="inventory">Inventory</a></li>
                    <li id = "header"><a id = "header" href="contact_responses">Contact Us Responses</a></li>
                </ul>
            </nav>
        </div>
    </div>
    
    <img src="accessibilityicon.png" id="accessibility-button" style="position: absolute; top: 10px; left: 10px; cursor: pointer; width: 60px;" alt="Accessibility Options">

    <!-- Accessibility Dropdown -->
    <div id="accessibility-dropdown">
        <button id="accessibility-option" onclick="enlargeAllText()" style="font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; font-size: 15px;" >ENLARGE TEXT SIZE</button>
        <button id="accessibility-option" onclick="reduceSizeAllText()" style="font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; font-size: 15px;">REDUCE TEXT SIZE</button>
        <button id="accessibility-option" onclick="revertToNormal()" style="font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; font-size: 15px;">REVERT TO NORMAL</button>
        <button id="accessibility-option" onclick="changeContrast()" style="font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; font-size: 15px;">CHANGE CONTRAST</button>
        <button id="accessibility-option" onclick="startSpeaking()" style="font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; font-size: 15px;">START SPEAKING PAGE</button>
        <button id="accessibility-option" onclick="pauseResumeSpeaking()" style="font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; font-size: 15px;">PAUSE/RESUME SPEAKING</button>
        <button id="accessibility-option" onclick="stopSpeaking()" style="font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; font-size: 15px;">STOP SPEAKING PAGE</button>
        <button id="accessibility-option" onclick="openWeatherModal()" style="font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; font-size: 15px;">GET WEATHER</button>
        <div id="google_translate_element"></div>

    </div>


        <!-- <div class="navigation">
            <nav>
                <ul>
                    <li><a href="javascript:void(0)" onclick="openNav()">Reports</a></li>
                    <li><a href="managermenu">Menu</a></li>
                    <li><a href="inventory">Inventory</a></li>
                </ul>
            </nav>
        </div>
    </div>

    <div id="overlayNav" class="overlay">
        <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>
        <div class="overlay-content">
            <a href="sales">Sales</a>
            <a href="excess">Excess</a>
            <a href="restock">Restock</a>
            <a href="popularity">Popularity</a>
            <a href="wst">What Sales Together</a>
        </div>
    </div> -->


    <script>
        function openNav() {
            document.getElementById("overlayNav").style.width = "40%";
        }

        function closeNav() {
            document.getElementById("overlayNav").style.width = "0%";
        }
    </script>

    </div>
    <br>
    <br>
    
    <div class="report-container">  
    <div class="left-reports">
    <div class="sales-report report">

    <h1 class="reports-header">SALES</h1>

    <script type="text/javascript">
        function salesFunction() {
            // Send a POST request to the server
            const startDate = document.getElementById("salesStartDate").value;
            console.log("startDate: " + startDate);
            const startTime = document.getElementById("salesStartTime").value;
            console.log("startTime: " + startTime);
            const endDate = document.getElementById("salesEndDate").value;
            console.log("endDate: " + endDate);
            const endTime = document.getElementById("salesEndTime").value;
            console.log("endTime: " + endTime);
            const menuItem = document.getElementById("salesMenuItem").value;
            console.log("menuItem: " + menuItem);

            const data = {
                startDate,
                startTime,
                endDate,
                endTime,
                menuItem,
            };

            fetch('/searchsales', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                console.log(data.message);

                const extractedData = data.result.map(item => {
                    return {
                        order_id: item.order_id,
                        order_date: item.order_date,
                        order_time: item.order_time,
                        num_drinks: item.num_drinks,
                        total_cost: item.total_cost

                    };
                });
                const prettyString = extractedData.map(item => {
                    return `Order ID: ${item.order_id}, Date: ${item.order_date}, Time: ${item.order_time}, Drinks: ${item.num_drinks}, Cost: ${item.total_cost}`;
                }).join('\n');
                // Display the result in the textarea
                document.getElementById("resultTextareaSales").value = prettyString;
            })
            .catch(error => {
                console.error('Error:', error);
            });
        }
    </script>

    <form id="salesForm" action="/searchsales" method="POST"> 
        <div class="form-row">
            <div class="form-group">
                <label for="salesStartDate">Start Date (yyyy-mm-dd):</label> <br>
                <input type="text" id="salesStartDate" name="salesStartDate" style="width: 40%; margin: 0px;" placeholder="yyyy-mm-dd" required>  <br>
            </div>
            <div class="form-group">
                <label for="salesStartTime">Start Time (hh:mm:ss):</label> <br>
                <input type="text" id="salesStartTime" name="salesStartTime" style="width: 40%; margin: 0px;" placeholder="hh:mm:ss" required>  <br>
            </div>
        </div>

        <div class="form-row">
            <div class="form-group">
                <label for="salesEndDate">End Date (yyyy-mm-dd):</label> <br>
                <input type="text" id="salesEndDate" name="salesEndDate" style="width: 40%; margin: 0px;" placeholder="yyyy-mm-dd" required> 
            </div>
            <div class="form-group">
                <label for="salesEndTime">End Time (hh:mm:ss):</label> <br>
                <input type="text" id="salesEndTime" name="salesEndTime" style="width: 40%; margin: 0px;" placeholder="hh:mm:ss" required> 
            </div>
        </div>
        <div class="form-row">
            <div class="form-group">
                <label for="salesMenuItem">Menu Item (0010-0060):</label>
                <input type="text" id="salesMenuItem" name="salesMenuItem" style="width: 40%; margin-top: 0px;" placeholder="0010-0060" required>  <br>
            </div>
            <div class="form-group">
                <button type="button" name="action" value="search" class="reportsButton" onclick="salesFunction()">Get Sales Report</button> 
            </div> 
        </div> 
    </form>

    <textarea class="textareastyle" id="resultTextareaSales" rows="10" cols="50" readonly></textarea>

    </div> 


    <div class="wst-report report">

        <h1 class="reports-header">WHAT SALES TOGETHER</h1>
    
        <script type="text/javascript">
            function salesTogetherFunction() {
                // Send a POST request to the server
                const startDate = document.getElementById("wstStartDate").value;
                console.log("startDate: " + startDate);
                const endDate = document.getElementById("wstEndDate").value;
                console.log("endDate: " + endDate);
    
                const data = {
                    startDate,
                    endDate,
                };
    
                fetch('/searchwst', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                })
                .then(response => response.json())
                .then(data => {
                    console.log(data.message);
                    const extractedData = data.result.map(item => {
                        return {
                            drink1: item.drink1,
                            drink2: item.drink2,
                            frequency: item.frequency,
    
                        };
                    });
                    const prettyString = extractedData.map(item => {
                        return `Drink 1: ${item.drink1}, Drink 2: ${item.drink2}, Frequency: ${item.frequency}`;
                    }).join('\n');
                    // Display the result in the textarea
                    document.getElementById("resultTextareaWST").value = prettyString;
                })
                .catch(error => {
                    console.error('Error:', error);
                });
            }
        </script>
    
        <form id="wstForm" action="/searchwst" method="POST"> 
            <div class="form-row">
                <div class="form-group">
                    <label for="wstStartDate">Start Date (yyyy-mm-dd):</label>
                    <input type="text" id="wstStartDate" name="wstStartDate" style="width: 40%; margin: 0px;" placeholder="yyyy-mm-dd" required>  <br><br>
                </div>
                <div class="form-group">
                    <label for="wstEndDate">End Date (yyyy-mm-dd):</label>
                    <input type="text" id="wstEndDate" name="wstEndDate" style="width: 40%; margin: 0px;" placeholder="yyyy-mm-dd" required>  <br><br>
                </div>
            </div>
            <button type="button" name="action" value="search" class="reportsButton" onclick="salesTogetherFunction()">See What Sales Together</button> 
        </form>
    
        <textarea class="textareastyle" id="resultTextareaWST" rows="10" cols="50" readonly></textarea>
    
    </div>
    </div>

    <div class="right-reports">
    <div class="excess-report report">

    <h1 class="reports-header">EXCESS</h1>

    <script type="text/javascript">
        function excessFunction() {

            fetch('/searchexcess', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
            })
            .then(response => response.json())
            .then(data => {
                console.log(data.message);
                // Display the result in the textarea
                const resultTextarea = document.getElementById("resultTextareaExcess");
                resultTextarea.value = data.message;

                data.result.forEach(item => {
                    resultTextarea.value += `\nProduct ID: ${item.product_id}, Name: ${item.itemname}, Quantity: ${item.current_amount}\n`;
                });
            })
            .catch(error => {
                console.error('Error:', error);
            });
        }
    </script>

    <form id="excessForm" action="/searchexcess" method="POST"> 
        <button type="button" name="action" value="search" class="reportsButton" onclick="excessFunction()">Get Excess Report</button> 
    </form>

    <textarea class="textareastyle" id="resultTextareaExcess" rows="10" cols="50" readonly></textarea>

    </div>

    <div class="restock-report report">

    <h1 class="reports-header">RESTOCK</h1>
    

    <script type="text/javascript">
    function restockFunction() {
        // Send a POST request to the server
        fetch('/searchrestock', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
        })
        .then(response => response.json())
        .then(data => {
            console.log(data.message);
            
            const resultTextarea = document.getElementById("resultTextareaRestock");
            resultTextarea.value = data.message;

            data.result.forEach(item => {
                resultTextarea.value += `\nProduct ID: ${item.product_id}, Name: ${item.itemname}, Quantity: ${item.current_amount}\n`;
            });
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }
</script>

    <form id="restockForm" action="/searchrestock" method="POST"> 
        <button type="button" name="action" value="search" class="reportsButton" onclick="restockFunction()">Get Restock Report</button> 
    </form>

    <textarea class="textareastyle" id="resultTextareaRestock" rows="10" cols="50" readonly></textarea>

    </div>


    <div class="popularity-report report">

    <h1 class="reports-header">POPULARITY</h1>

    <script type="text/javascript">
        function popFunction() {
            // Send a POST request to the server
            const startDate = document.getElementById("popStartDate").value;
            console.log("startDate: " + startDate);
            const endDate = document.getElementById("popEndDate").value;
            console.log("endDate: " + endDate);

            const data = {
                startDate,
                endDate,
            };

            fetch('/searchpop', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                console.log(data.message);
                // Display the result in the textarea
                // document.getElementById("resultTextareaPop").value = data.message;
                document.getElementById("resultTextareaPop").value = JSON.stringify(data.statistic, null, 4);
                //changed          
            })
            .catch(error => {
                console.error('Error:', error);
            });
        }
    </script>

    <form id="popularityForm" action="/searchpop" method="POST"> 
        <div class="form-row">
            <div class="form-group">
                <label for="popStartDate">Start Date (yyyy-mm-dd):</label>
                <input type="text" id="popStartDate" name="popStartDate" style="width: 40%; margin: 0px;" placeholder="yyyy-mm-dd" required>  <br><br>
            </div>
            <div class="form-group">
                <label for="popEndDate">End Date (yyyy-mm-dd):</label>
                <input type="text" id="popEndDate" name="popEndDate" style="width: 40%; margin: 0px;" placeholder="yyyy-mm-dd" required>  <br><br>
            </div>
        </div>
        <button type="button" name="action" value="search" class="reportsButton" onclick="popFunction()">Get Popularity Report</button> 
    </form>

    <textarea class="textareastyle" id="resultTextareaPop" rows="10" cols="50" readonly></textarea>

    </div>
    </div>

    </div>

    <script src="functions.js"></script>

    <script> 
        document.addEventListener("DOMContentLoaded", function () { // this dont really work rip :(
            var dropdown = document.querySelector('.dropdown');
            var dropdownContent = document.querySelector('.dropdown-content');
    
            // Close dropdown when clicking outside
            document.addEventListener('click', function (event) {
                var isClickInside = dropdown.contains(event.target) || dropdownContent.contains(event.target);
    
                if (!isClickInside && dropdown.classList.contains('active') && !dropdown.classList.contains('clicked')) {
                    dropdown.classList.remove('active');
                }
            });
    
            function toggleDropdown() {
                dropdown.classList.toggle('active');
            }
    
            // Toggle dropdown on click
            dropdown.addEventListener('click', function (event) {
                // Prevent the click event from triggering the document click event
                event.stopPropagation();
                toggleDropdown();
    
                // Add a class to indicate that the dropdown was clicked
                dropdown.classList.add('clicked');
            });
    
            // Remove the 'clicked' class when clicking outside
            document.addEventListener('click', function () {
                if (!dropdown.classList.contains('hovered')) {
                    dropdown.classList.remove('clicked');
                }
            });
    
            // Open dropdown on hover
            dropdown.addEventListener('mouseover', function () {
                dropdown.classList.add('active');
                dropdown.classList.add('hovered');
            });
    
            // Close dropdown on mouseout
            dropdown.addEventListener('mouseout', function () {
                if (!dropdown.classList.contains('clicked')) {
                    dropdown.classList.remove('active');
                }
                dropdown.classList.remove('hovered');
            });
        });
    </script>
    
    
    

    <script src="functions.js"></script>

    </script>

    <button class="employeebutton" id="redirectButton">Logout</button>
    <script type="text/javascript">
        document.getElementById("redirectButton").onclick = function () {
            location.href = "logout";
        };
    </script>
</body>
<script>
    let synth;
    let speaking = false;
    let paused = false;
    let utterance;

    function initializeSynthesis() {
        synth = window.speechSynthesis;

        document.getElementById('speak-button').addEventListener('click', function () {
            startSpeaking();
            document.getElementById('stop-button').removeAttribute('disabled');
        });

        document.getElementById('stop-button').addEventListener('click', function () {
            stopSpeaking();
        });

        // Add event listener for pause/resume button
        document.getElementById('pause-resume-button').addEventListener('click', function () {
            pauseResumeSpeaking();
        });
    }

    function pauseResumeSpeaking() {
        if (speaking) {
            if (paused) {
                synth.resume();
                paused = false;
                console.log("Speech resumed.");
            } else {
                synth.pause();
                paused = true;
                console.log("Speech paused.");
            }
        }
    }

    function readEntirePage() {
        const elements = document.body.getElementsByTagName('*');
        let fullText = '';

        for (let i = 0; i < elements.length; i++) {
            const element = elements[i];
            if (element.tagName !== 'SCRIPT' && element.id !== 'dont-read') {
                fullText += element.innerText + ' ' + ' ' + ' ';
            }
        }

        return fullText.trim();
    }

    function startSpeaking() {
        const textToSpeak = readEntirePage();
        if (synth.speaking) {
            synth.cancel();
        }

        utterance = new SpeechSynthesisUtterance(textToSpeak);

        // Add a callback to the onstart event
        utterance.onstart = function () {
            console.log("Speech started. Currently speaking: " + textToSpeak);
        };

        synth.speak(utterance);
        speaking = true;

        utterance.onend = function () {
            speaking = false;
            paused = false;
            document.getElementById('stop-button').setAttribute('disabled', true);
        };
    }

    function stopSpeaking() {
        if (speaking) {
            synth.cancel();
        }
    }
    
    function changeContrast() {
        var bodyElement = document.body;
        var modal = document.getElementById("weatherModal");

        // Invert colors using the filter property
        var invertValue = bodyElement.style.filter === 'invert(100%)' ? 'invert(0%)' : 'invert(100%)';
        bodyElement.style.filter = invertValue;

        // Invert background color
        var bgColor = bodyElement.style.backgroundColor === 'rgb(0, 0, 0)' ? '#fff' : '#000';
        bodyElement.style.backgroundColor = bgColor;

        // Invert colors for the modal as well
        if (modal) {
            modal.style.filter = invertValue;
            modal.style.backgroundColor = bgColor;
        }
    }
    document.getElementById('accessibility-button').addEventListener('click', function () {
        var dropdown = document.getElementById('accessibility-dropdown');
        dropdown.style.display = dropdown.style.display === 'block' ? 'none' : 'block';
    });


    function openWeatherModal() {
        document.getElementById("weatherModal").style.display = "block";
    }

    function closeWeatherModal() {
        document.getElementById("weatherModal").style.display = "none";
    }

    function getweather() {
        var city = document.getElementById("modalSearch").value;
        var units = document.getElementById("modalUnits").value;
        var apiKey = "d2dda5a067msh26327237b9ff85dp18f58ejsn0b86f84efa1d";
        var apiUrl = "https://weatherapi-com.p.rapidapi.com/current.json?q=" + city + "&units=" + units;

        fetch(apiUrl, {
            method: "GET",
            headers: {
                "X-RapidAPI-Host": "weatherapi-com.p.rapidapi.com",
                "X-RapidAPI-Key": apiKey,
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.error) {
                document.getElementById("weatherInfo").innerHTML = "Error: " + data.error.message;
            } else {
                var temp, fl;
                if (units == "f") {
                    temp = "temp_f";
                    fl = "feelslike_f";
                } else {
                    temp = "temp_c";
                    fl = "feelslike_c";
                }
                document.getElementById("weatherInfo").innerHTML = "<h1>" + data.current.condition.text + "</h1>Temperature: " + data.current[temp] + "<br>Feels like: " + data.current[fl] + "<br>UV index: " + data.current.uv + "<br>Humidity: " + data.current.humidity + "<br>Cloud cover: " + data.current.cloud;
            }
        })
        .catch(error => {
            console.error("Error:", error);
        });
    }

    // Store original font sizes
    var originalFontSizes = {};

    // Get original font sizes when the page loads
    document.addEventListener('DOMContentLoaded', function () {
        var elements = document.querySelectorAll('*');
        elements.forEach(function (element) {
            originalFontSizes[element] = window.getComputedStyle(element, null).getPropertyValue('font-size');
        });
    });

    function revertToNormal() {
        var elements = document.querySelectorAll('*');
        elements.forEach(function (element) {
            element.style.fontSize = originalFontSizes[element];
        });
    }

    function enlargeAllText() {
        var elements = document.querySelectorAll('*');
        elements.forEach(function (element) {
            var currentSize = window.getComputedStyle(element, null).getPropertyValue('font-size');
            var newSize = (parseFloat(currentSize) * 1.2) + 'px'; // Increase font size by 50%
            element.style.fontSize = newSize;
        });
    }

    function reduceSizeAllText() {
        var elements = document.querySelectorAll('*');
        elements.forEach(function (element) {
            var currentSize = window.getComputedStyle(element, null).getPropertyValue('font-size');
            var newSize = (parseFloat(currentSize) * 0.833333) + 'px'; // Decrease font size 
            element.style.fontSize = newSize;
        });
    }

    initializeSynthesis();
</script>

<div id="weatherModal" class="modal">
<div class="modal-content">
    <span class="close" onclick="closeWeatherModal()">&times;</span>
    <h2>Weather Information</h2>
    <label for="modalSearch">City:</label>
    <input placeholder="City" id="modalSearch">
    <select id="modalUnits">
        <option value="f">Fahrenheit</option>
        <option value="c">Celsius</option>
    </select>
    <button onclick="getweather()">Get Weather!</button>
    <div id="weatherInfo"></div>
</div>
</div>
</html>
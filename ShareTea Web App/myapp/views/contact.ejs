<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Contact Us</title>
<script type="text/javascript"></script>
<link id="theme" rel="stylesheet" type="text/css" href="style.css">
</head>
<body>
  <br>
  <!-- <div id="google_translate_element"></div> -->
 
  <script type="text/javascript">
      function googleTranslateElementInit() {
          new google.translate.TranslateElement(
              {pageLanguage: 'en'},
              'google_translate_element'
          );
      }
  </script>

  <script type="text/javascript"
          src=
"https://translate.google.com/translate_a/element.js?
cb=googleTranslateElementInit">
  </script>
    <script src="script.js"></script>
    <a href="/"><img src="logo-clearbg.png" class="logo"></a>
    <a href="employee" class = "employeebutton">Employee Login</a></li>
    <div id="header">
      <a   href="/"><img src="logo-clearbg.png" class="logo" alt="Picture of the ShareTea logo"></a>
      <a   href="employee" class="employeebutton">Employee Login</a>
      <div   class="navigation">
          <nav   class="main-nav">
              <ul  >
                  <li  ><a   href="/">Home</a></li>
                  <li  ><a   href="menu">Menu</a></li>
                  <li  ><a   href="contact">Contact Us</a></li>
                  <li  ><a   href="order">Cart</a></li>
              </ul>
          </nav>
      </div>
  </div>

  <img src="accessibilityicon.png" id="accessibility-button" style="position: absolute; top: 10px; left: 10px; cursor: pointer; width: 60px;" alt="Accessibility Options">

  <!-- Accessibility Dropdown -->
  <div id="accessibility-dropdown">
      <button id="accessibility-option" onclick="enlargeAllText()" style="font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; font-size: 15px;" >ENLARGE TEXT SIZE</button>
      <button id="accessibility-option" onclick="reduceSizeAllText()" style="font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; font-size: 15px;">REDUCE TEXT SIZE</button>
      <button id="accessibility-option" onclick="revertToNormal()" style="font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; font-size: 15px;">REVERT TO NORMAL</button>
      <button id="accessibility-option" onclick="changeContrast()" style="font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; font-size: 15px;">CHANGE CONTRAST</button>
      <button id="accessibility-option" onclick="startSpeaking()" style="font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; font-size: 15px;">START SPEAKING PAGE</button>
      <button id="accessibility-option" onclick="pauseResumeSpeaking()" style="font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; font-size: 15px;">PAUSE/RESUME SPEAKING</button>
      <button id="accessibility-option" onclick="stopSpeaking()" style="font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; font-size: 15px;">STOP SPEAKING PAGE</button>
      <button id="accessibility-option" onclick="openWeatherModal()" style="font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; font-size: 15px;">GET WEATHER</button>
      <div id="google_translate_element"></div>

  </div>
        <div class="contact-header">
          <h1 style="font-weight: 300; font-size: 50px; text-align: center;" > Get in touch with ShareTea!</h1>
        </div>
        <div class="contact-block">
        <div class="contact-container">
            <!-- <form id="contactForm" onsubmit="submitForm()"> -->
            <div class="form-row">
              <div class="form-group">
                  <label for="fname">First Name</label>
                  <input type="text" id="fname" name="firstname" style="background-color: var(--background-color);" placeholder="First Name" required>
              </div>
              <div class="form-group">
                  <label for="lname">Last Name</label>
                  <input type="text" id="lname" name="lastname" style="background-color: var(--background-color);" placeholder="Last Name" required>
              </div>
          </div>

              <label for="email">Email</label>
              <input type="text" id="email" name="emailaddress" style="background-color: var(--background-color);" placeholder="Enter your email address">
              <br><br>

              <label for="region">Region</label>
              <select id="region" name="Region" style="background-color: var(--background-color);" >
                <option value="USA">USA</option>
                <option value="Canada">Canada</option>
                <option value="Australia">Australia</option>
                <option value="asia">Asia</option>
                <option value="Middle East">Middle East</option>
                <option value="Europe">Europe</option>
              </select>
              <br><br>

              <!-- <label for="phone">Phone Number</label>
              <input type="text" id="phone" name="phonenumber" style="background-color: var(--background-color);" placeholder="Enter your phone number" pattern="[0-9]*" inputmode="numeric">
              <br><br> -->


              <label for="subject">Subject</label>
              <textarea id="subject" name="subject" style="background-color: var(--background-color); font-family: Arial, Helvetica, sans-serif;" placeholder="Include your message" style="height:100px;width:100%"></textarea>
              <br><br>

              <button id="submit-button">Submit</button>
              <!-- <input type="submit" value="Submit"> -->
            <!-- </form> -->
          </div>
        </div>

          <div class="contact-space">
            <h1>  </h1>
          </div>
</body>
</html>

<script>
  document.getElementById("submit-button").addEventListener("click", function () {
        // Get all form elements
        var firstname_ = document.getElementById('fname');
        var lastname_ = document.getElementById('lname');
        var email_ = document.getElementById('email');
        var region_ = document.getElementById('region');
        // var phoneNumber = document.getElementById('phone');
        var subject_ = document.getElementById('subject');

        // check form values 
        console.log("First Name: " + firstname_.value);
        console.log("Last Name: " + lastname_.value);
        console.log("Email: " + email_.value);
        console.log("Region: " + region_.value);
        console.log("Subject: " + subject_.value);
        
        var firstname = firstname_.value;
        var lastname = lastname_.value;
        var email = email_.value;
        var region = region_.value;
        var subject = subject_.value;

        const data = {
          firstname,
          lastname, 
          email,
          region,
          subject
        };
        fetch('/submitContactForm', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(data => {
            console.log(data.message);
            alert("Form Submitted Successfully!");
        })
        .catch(error => {
            console.error('Error:', error);
        });
        firstname_.value = "";
        lastname_.value = "";
        email_.value = "";
        region_.selectedIndex = 0;
        subject_.value = "";
    });
</script>


<script>
  let synth;
  let speaking = false;
  let paused = false;
  let utterance;

  function initializeSynthesis() {
      synth = window.speechSynthesis;

      document.getElementById('speak-button').addEventListener('click', function () {
          startSpeaking();
          document.getElementById('stop-button').removeAttribute('disabled');
      });

      document.getElementById('stop-button').addEventListener('click', function () {
          stopSpeaking();
      });

      // Add event listener for pause/resume button
      document.getElementById('pause-resume-button').addEventListener('click', function () {
          pauseResumeSpeaking();
      });
  }

  function pauseResumeSpeaking() {
      if (speaking) {
          if (paused) {
              synth.resume();
              paused = false;
              console.log("Speech resumed.");
          } else {
              synth.pause();
              paused = true;
              console.log("Speech paused.");
          }
      }
  }

  function readEntirePage() {
      const elements = document.body.getElementsByTagName('*');
      let fullText = '';

      for (let i = 0; i < elements.length; i++) {
          const element = elements[i];
          if (element.tagName !== 'SCRIPT' && element.id !== 'dont-read') {
              fullText += element.innerText + ' ' + ' ' + ' ';
          }
      }

      return fullText.trim();
  }

  function startSpeaking() {
      const textToSpeak = readEntirePage();
      if (synth.speaking) {
          synth.cancel();
      }

      utterance = new SpeechSynthesisUtterance(textToSpeak);

      // Add a callback to the onstart event
      utterance.onstart = function () {
          console.log("Speech started. Currently speaking: " + textToSpeak);
      };

      synth.speak(utterance);
      speaking = true;

      utterance.onend = function () {
          speaking = false;
          paused = false;
          document.getElementById('stop-button').setAttribute('disabled', true);
      };
  }

  function stopSpeaking() {
      if (speaking) {
          synth.cancel();
      }
  }
  
  function changeContrast() {
      var bodyElement = document.body;
      var modal = document.getElementById("weatherModal");

      // Invert colors using the filter property
      var invertValue = bodyElement.style.filter === 'invert(100%)' ? 'invert(0%)' : 'invert(100%)';
      bodyElement.style.filter = invertValue;

      // Invert background color
      var bgColor = bodyElement.style.backgroundColor === 'rgb(0, 0, 0)' ? '#fff' : '#000';
      bodyElement.style.backgroundColor = bgColor;

      // Invert colors for the modal as well
      if (modal) {
          modal.style.filter = invertValue;
          modal.style.backgroundColor = bgColor;
      }
  }
  document.getElementById('accessibility-button').addEventListener('click', function () {
      var dropdown = document.getElementById('accessibility-dropdown');
      dropdown.style.display = dropdown.style.display === 'block' ? 'none' : 'block';
  });


  function openWeatherModal() {
      document.getElementById("weatherModal").style.display = "block";
  }

  function closeWeatherModal() {
      document.getElementById("weatherModal").style.display = "none";
  }

  function getweather() {
      var city = document.getElementById("modalSearch").value;
      var units = document.getElementById("modalUnits").value;
      var apiKey = "d2dda5a067msh26327237b9ff85dp18f58ejsn0b86f84efa1d";
      var apiUrl = "https://weatherapi-com.p.rapidapi.com/current.json?q=" + city + "&units=" + units;

      fetch(apiUrl, {
          method: "GET",
          headers: {
              "X-RapidAPI-Host": "weatherapi-com.p.rapidapi.com",
              "X-RapidAPI-Key": apiKey,
          }
      })
      .then(response => response.json())
      .then(data => {
          if (data.error) {
              document.getElementById("weatherInfo").innerHTML = "Error: " + data.error.message;
          } else {
              var temp, fl;
              if (units == "f") {
                  temp = "temp_f";
                  fl = "feelslike_f";
              } else {
                  temp = "temp_c";
                  fl = "feelslike_c";
              }
              document.getElementById("weatherInfo").innerHTML = "<h1>" + data.current.condition.text + "</h1>Temperature: " + data.current[temp] + "<br>Feels like: " + data.current[fl] + "<br>UV index: " + data.current.uv + "<br>Humidity: " + data.current.humidity + "<br>Cloud cover: " + data.current.cloud;
          }
      })
      .catch(error => {
          console.error("Error:", error);
      });
  }

  // Store original font sizes
  var originalFontSizes = {};

  // Get original font sizes when the page loads
  document.addEventListener('DOMContentLoaded', function () {
      var elements = document.querySelectorAll('*');
      elements.forEach(function (element) {
          originalFontSizes[element] = window.getComputedStyle(element, null).getPropertyValue('font-size');
      });
  });

  function revertToNormal() {
      var elements = document.querySelectorAll('*');
      elements.forEach(function (element) {
          element.style.fontSize = originalFontSizes[element];
      });
  }

  function enlargeAllText() {
      var elements = document.querySelectorAll('*');
      elements.forEach(function (element) {
          var currentSize = window.getComputedStyle(element, null).getPropertyValue('font-size');
          var newSize = (parseFloat(currentSize) * 1.2) + 'px'; // Increase font size by 50%
          element.style.fontSize = newSize;
      });
  }

  function reduceSizeAllText() {
      var elements = document.querySelectorAll('*');
      elements.forEach(function (element) {
          var currentSize = window.getComputedStyle(element, null).getPropertyValue('font-size');
          var newSize = (parseFloat(currentSize) * 0.833333) + 'px'; // Decrease font size 
          element.style.fontSize = newSize;
      });
  }

  initializeSynthesis();
</script>

<div id="weatherModal" class="modal">
<div class="modal-content">
  <span class="close" onclick="closeWeatherModal()">&times;</span>
  <h2>Weather Information</h2>
  <label for="modalSearch">City:</label>
  <input placeholder="City" id="modalSearch">
  <select id="modalUnits">
      <option value="f">Fahrenheit</option>
      <option value="c">Celsius</option>
  </select>
  <button onclick="getweather()">Get Weather!</button>
  <div id="weatherInfo"></div>
</div>
</div>

